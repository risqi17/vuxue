{"remainingRequest":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Belajar\\VueJS\\starter-kit\\src\\layouts\\components\\navbar\\TheNavbarVertical.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Belajar\\VueJS\\starter-kit\\src\\layouts\\components\\navbar\\TheNavbarVertical.vue","mtime":1570089414000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VxAutoSuggest from '@/components/vx-auto-suggest/VxAutoSuggest.vue';\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport draggable from 'vuedraggable'\n\nexport default {\n    name: \"the-navbar\",\n    props: {\n        navbarColor: {\n            type: String,\n            default: \"#fff\",\n        },\n    },\n    data() {\n        return {\n            navbarSearchAndPinList: this.$store.state.navbarSearchAndPinList,\n            searchQuery: '',\n            showFullSearch: false,\n            unreadNotifications: [\n                { index: 0, title: 'New Message', msg: 'Are your going to meet me tonight?', icon: 'MessageSquareIcon', time: this.randomDate({sec: 10}), category: 'primary' },\n                { index: 1, title: 'New Order Recieved', msg: 'You got new order of goods.', icon: 'PackageIcon', time: this.randomDate({sec: 40}), category: 'success' },\n                { index: 2, title: 'Server Limit Reached!', msg: 'Server have 99% CPU usage.', icon: 'AlertOctagonIcon', time: this.randomDate({min: 1}), category: 'danger' },\n                { index: 3, title: 'New Mail From Peter', msg: 'Cake sesame snaps cupcake', icon: 'MailIcon', time: this.randomDate({min: 6}), category: 'primary' },\n                { index: 4, title: 'Bruce\\'s Party', msg: 'Chocolate cake oat cake tiramisu', icon: 'CalendarIcon', time: this.randomDate({hr: 2}), category: 'warning' },\n            ],\n            settings: { // perfectscrollbar settings\n                maxScrollbarLength: 60,\n                wheelSpeed: .60,\n            },\n            autoFocusSearch: false,\n            showBookmarkPagesDropdown: false,\n        }\n    },\n    watch: {\n        '$route'() {\n            if (this.showBookmarkPagesDropdown) this.showBookmarkPagesDropdown = false\n        }\n    },\n    computed: {\n        navbarColorLocal() {\n          return this.$store.state.theme === \"dark\" ? \"#10163a\" : this.navbarColor\n        },\n        // HELPER\n        verticalNavMenuWidth() {\n            return this.$store.state.verticalNavMenuWidth\n        },\n        windowWidth() {\n            return this.$store.state.windowWidth\n        },\n\n        // NAVBAR STYLE\n        classObj() {\n            if (this.verticalNavMenuWidth == \"default\") return \"navbar-default\"\n            else if (this.verticalNavMenuWidth == \"reduced\") return \"navbar-reduced\"\n            else if (this.verticalNavMenuWidth) return \"navbar-full\"\n        },\n\n        // BOOKMARK & SEARCH\n        data() {\n            return this.$store.state.navbarSearchAndPinList;\n        },\n        starredPages() {\n            return this.$store.state.starredPages;\n        },\n        starredPagesLimited: {\n            get() {\n                return this.starredPages.slice(0, 10);\n            },\n            set(list) {\n                this.$store.dispatch('arrangeStarredPagesLimited', list);\n            }\n        },\n        starredPagesMore: {\n            get() {\n                return this.starredPages.slice(10);\n            },\n            set(list) {\n                this.$store.dispatch('arrangeStarredPagesMore', list);\n            }\n        },\n\n        // PROFILE\n        activeUserInfo() {\n          return this.$store.state.AppActiveUser\n        },\n        user_displayName() {\n            return this.activeUserInfo.displayName\n        },\n        activeUserImg() {\n            return this.$store.state.AppActiveUser.photoURL;\n        }\n    },\n    methods: {\n        showSidebar() {\n            this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true);\n        },\n        selected(item) {\n            this.$router.push(item.url).catch(() => {})\n            this.showFullSearch = false;\n        },\n        actionClicked(item) {\n            // e.stopPropogation();\n            this.$store.dispatch('updateStarredPage', { index: item.index, val: !item.highlightAction });\n        },\n        showNavbarSearch() {\n            this.showFullSearch = true;\n        },\n        showSearchbar() {\n            this.showFullSearch = true;\n        },\n        elapsedTime(startTime) {\n            let x = new Date(startTime);\n            let now = new Date();\n            var timeDiff = now - x;\n            timeDiff /= 1000;\n\n            var seconds = Math.round(timeDiff);\n            timeDiff = Math.floor(timeDiff / 60);\n\n            var minutes = Math.round(timeDiff % 60);\n            timeDiff = Math.floor(timeDiff / 60);\n\n            var hours = Math.round(timeDiff % 24);\n            timeDiff = Math.floor(timeDiff / 24);\n\n            var days = Math.round(timeDiff % 365);\n            timeDiff = Math.floor(timeDiff / 365);\n\n            var years = timeDiff;\n\n            if (years > 0) {\n                return years + (years > 1 ? ' Years ' : ' Year ') + 'ago';\n            } else if (days > 0) {\n                return days + (days > 1 ? ' Days ' : ' Day ') + 'ago';\n            } else if (hours > 0) {\n                return hours + (hours > 1 ? ' Hrs ' : ' Hour ') + 'ago';\n            } else if (minutes > 0) {\n                return minutes + (minutes > 1 ? ' Mins ' : ' Min ') + 'ago';\n            } else if (seconds > 0) {\n                return seconds + (seconds > 1 ? ' sec ago' : 'just now');\n            }\n\n            return 'Just Now'\n        },\n        logout() {\n            // This is just for demo Purpose. If user clicks on logout -> redirect\n            this.$router.push('/pages/login').catch(() => {})\n        },\n        outside: function() {\n            this.showBookmarkPagesDropdown = false\n        },\n\n        // Method for creating dummy notification time\n        randomDate({hr, min, sec}) {\n          let date = new Date()\n\n          if(hr) date.setHours(date.getHours() - hr)\n          if(min) date.setMinutes(date.getMinutes() - min)\n          if(sec) date.setSeconds(date.getSeconds() - sec)\n\n          return date\n        }\n    },\n    directives: {\n        'click-outside': {\n            bind: function(el, binding) {\n                const bubble = binding.modifiers.bubble\n                const handler = (e) => {\n                    if (bubble || (!el.contains(e.target) && el !== e.target)) {\n                        binding.value(e)\n                    }\n                }\n                el.__vueClickOutside__ = handler\n                document.addEventListener('click', handler)\n            },\n\n            unbind: function(el) {\n                document.removeEventListener('click', el.__vueClickOutside__)\n                el.__vueClickOutside__ = null\n\n            }\n        }\n    },\n    components: {\n        VxAutoSuggest,\n        VuePerfectScrollbar,\n        draggable\n    },\n}\n",{"version":3,"sources":["TheNavbarVertical.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"TheNavbarVertical.vue","sourceRoot":"src/layouts/components/navbar","sourcesContent":["<!-- =========================================================================================\n  File Name: TheNavbar.vue\n  Description: Navbar component\n  Component Name: TheNavbar\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n<div class=\"relative\">\n  <div class=\"vx-navbar-wrapper\" :class=\"classObj\">\n    <vs-navbar class=\"vx-navbar navbar-custom navbar-skelton\" :color=\"navbarColorLocal\">\n\n      <!-- SM - OPEN SIDEBAR BUTTON -->\n      <feather-icon class=\"sm:inline-flex xl:hidden cursor-pointer mr-1\" icon=\"MenuIcon\" @click.stop=\"showSidebar\"></feather-icon>\n\n      <template v-if=\"windowWidth >= 992\">\n        <!-- STARRED PAGES - FIRST 10 -->\n        <ul class=\"vx-navbar__starred-pages\">\n          <draggable v-model=\"starredPagesLimited\" :group=\"{name: 'pinList'}\" class=\"flex cursor-move\">\n            <li class=\"starred-page\" v-for=\"page in starredPagesLimited\" :key=\"page.url\">\n              <vx-tooltip :text=\"page.label\" position=\"bottom\" delay=\".3s\">\n                <feather-icon svgClasses=\"h-6 w-6\" class=\"p-2 cursor-pointer\" :icon=\"page.labelIcon\" @click=\"$router.push(page.url).catch(() => {})\" />\n              </vx-tooltip>\n            </li>\n          </draggable>\n        </ul>\n\n        <!-- STARRED PAGES MORE -->\n        <div class=\"vx-navbar__starred-pages--more-dropdown\" v-if=\"starredPagesMore.length\">\n          <vs-dropdown vs-custom-content vs-trigger-click>\n            <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" class=\"cursor-pointer p-2\"></feather-icon>\n            <vs-dropdown-menu>\n              <ul class=\"vx-navbar__starred-pages-more--list\">\n                <draggable v-model=\"starredPagesMore\" :group=\"{name: 'pinList'}\" class=\"cursor-move\">\n                  <li class=\"starred-page--more flex items-center cursor-pointer\" v-for=\"page in starredPagesMore\" :key=\"page.url\" @click=\"$router.push(page.url).catch(() => {})\">\n                    <feather-icon svgClasses=\"h-5 w-5\" class=\"ml-2 mr-1\" :icon=\"page.labelIcon\"></feather-icon>\n                    <span class=\"px-2 pt-2 pb-1\">{{ page.label }}</span>\n                  </li>\n                </draggable>\n              </ul>\n            </vs-dropdown-menu>\n          </vs-dropdown>\n        </div>\n\n        <div class=\"bookmark-container\">\n          <feather-icon icon=\"StarIcon\" :svgClasses=\"['stoke-current text-warning', {'text-white': navbarColor != '#fff'}]\" class=\"cursor-pointer p-2\" @click.stop=\"showBookmarkPagesDropdown = !showBookmarkPagesDropdown\" />\n                    <div v-click-outside=\"outside\" class=\"absolute bookmark-list w-1/3 xl:w-1/4 mt-4\" v-if=\"showBookmarkPagesDropdown\">\n          <vx-auto-suggest :autoFocus=\"true\" :data=\"navbarSearchAndPinList\" @selected=\"selected\" @actionClicked=\"actionClicked\" inputClassses=\"w-full\" show-action show-pinned background-overlay></vx-auto-suggest>\n          </div>\n        </div>\n      </template>\n\n\n      <vs-spacer />\n\n      <!-- SEARCHBAR -->\n      <div class=\"search-full-container w-full h-full absolute left-0\" :class=\"{'flex': showFullSearch}\" v-show=\"showFullSearch\">\n          <vx-auto-suggest\n            class=\"w-full\"\n            inputClassses=\"w-full vs-input-no-border vs-input-no-shdow-focus\"\n            :autoFocus=\"showFullSearch\"\n            :data=\"navbarSearchAndPinList\"\n            icon=\"SearchIcon\"\n            placeholder=\"Search...\"\n            ref=\"navbarSearch\"\n            @closeSearchbar=\"showFullSearch = false\"\n            @selected=\"selected\"\n            background-overlay />\n          <div class=\"absolute right-0 h-full z-50\">\n              <feather-icon icon=\"XIcon\" class=\"px-4 cursor-pointer h-full close-search-icon\" @click=\"showFullSearch = false\"></feather-icon>\n          </div>\n      </div>\n      <feather-icon icon=\"SearchIcon\" @click=\"showFullSearch = true\" class=\"cursor-pointer navbar-fuzzy-search mr-4\"></feather-icon>\n\n      <!-- NOTIFICATIONS -->\n      <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n        <feather-icon icon=\"BellIcon\" class=\"cursor-pointer mt-1 sm:mr-6 mr-2\" :badge=\"unreadNotifications.length\"></feather-icon>\n        <vs-dropdown-menu class=\"notification-dropdown dropdown-custom vx-navbar-dropdown\">\n\n          <div class=\"notification-top text-center p-5 bg-primary text-white\">\n            <h3 class=\"text-white\">{{ unreadNotifications.length }} New</h3>\n            <p class=\"opacity-75\">App Notifications</p>\n          </div>\n\n          <VuePerfectScrollbar ref=\"mainSidebarPs\" class=\"scroll-area--nofications-dropdown p-0 mb-10\" :settings=\"settings\">\n          <ul class=\"bordered-items\">\n            <li v-for=\"ntf in unreadNotifications\" :key=\"ntf.index\" class=\"flex justify-between px-4 py-4 notification cursor-pointer\">\n              <div class=\"flex items-start\">\n                <feather-icon :icon=\"ntf.icon\" :svgClasses=\"[`text-${ntf.category}`, 'stroke-current mr-1 h-6 w-6']\"></feather-icon>\n                <div class=\"mx-2\">\n                  <span class=\"font-medium block notification-title\" :class=\"[`text-${ntf.category}`]\">{{ ntf.title }}</span>\n                  <small>{{ ntf.msg }}</small>\n                </div>\n              </div>\n              <small class=\"mt-1 whitespace-no-wrap\">{{ elapsedTime(ntf.time) }}</small>\n            </li>\n          </ul>\n          </VuePerfectScrollbar>\n                    <div class=\"\n                        checkout-footer\n                        fixed\n                        bottom-0\n                        rounded-b-lg\n                        text-primary\n                        w-full\n                        p-2\n                        font-semibold\n                        text-center\n                        border\n                        border-b-0\n                        border-l-0\n                        border-r-0\n                        border-solid\n                        d-theme-border-grey-light\n                        cursor-pointer\">\n                        <span>View All Notifications</span>\n                    </div>\n        </vs-dropdown-menu>\n      </vs-dropdown>\n\n      <!-- USER META -->\n      <div class=\"the-navbar__user-meta flex items-center\" v-if=\"activeUserInfo.displayName\">\n        <div class=\"text-right leading-tight hidden sm:block\">\n          <p class=\"font-semibold\">{{ user_displayName }}</p>\n          <small>Available</small>\n        </div>\n        <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n          <div class=\"con-img ml-3\">\n            <img\n              v-if=\"activeUserImg\"\n              key=\"onlineImg\"\n              :src=\"activeUserImg\"\n              alt=\"user-img\"\n              width=\"40\"\n              height=\"40\"\n              class=\"rounded-full shadow-md cursor-pointer block\" />\n          </div>\n          <vs-dropdown-menu class=\"vx-navbar-dropdown\">\n            <ul style=\"min-width: 9rem\">\n              <li\n                class=\"flex py-2 px-4 cursor-pointer hover:bg-primary hover:text-white\"\n                @click=\"$router.push('/pages/profile').catch(() => {})\">\n\n                <feather-icon icon=\"UserIcon\" svgClasses=\"w-4 h-4\" />\n                <span class=\"ml-2\">Profile</span>\n              </li>\n              <li\n                class=\"flex py-2 px-4 cursor-pointer hover:bg-primary hover:text-white\"\n                @click=\"$router.push('/apps/email').catch(() => {})\">\n\n                <feather-icon icon=\"MailIcon\" svgClasses=\"w-4 h-4\" />\n                <span class=\"ml-2\">Inbox</span>\n              </li>\n              <li\n                class=\"flex py-2 px-4 cursor-pointer hover:bg-primary hover:text-white\"\n                @click=\"$router.push('/apps/todo').catch(() => {})\">\n\n                <feather-icon icon=\"CheckSquareIcon\" svgClasses=\"w-4 h-4\" />\n                <span class=\"ml-2\">Tasks</span>\n              </li>\n              <li\n                class=\"flex py-2 px-4 cursor-pointer hover:bg-primary hover:text-white\"\n                @click=\"$router.push('/apps/chat').catch(() => {})\">\n\n                <feather-icon icon=\"MessageSquareIcon\" svgClasses=\"w-4 h-4\" />\n                <span class=\"ml-2\">Chat</span>\n              </li>\n              <li\n                class=\"flex py-2 px-4 cursor-pointer hover:bg-primary hover:text-white\"\n                @click=\"$router.push('/apps/eCommerce/wish-list').catch(() => {})\">\n\n                <feather-icon icon=\"HeartIcon\" svgClasses=\"w-4 h-4\" />\n                <span class=\"ml-2\">Wish List</span>\n              </li>\n\n              <vs-divider class=\"m-1\"></vs-divider>\n\n              <li\n                class=\"flex py-2 px-4 cursor-pointer hover:bg-primary hover:text-white\"\n                @click=\"logout\">\n                <feather-icon icon=\"LogOutIcon\" svgClasses=\"w-4 h-4\"/>\n                <span class=\"ml-2\">Logout</span>\n              </li>\n            </ul>\n          </vs-dropdown-menu>\n        </vs-dropdown>\n      </div>\n\n    </vs-navbar>\n  </div>\n</div>\n</template>\n\n<script>\nimport VxAutoSuggest from '@/components/vx-auto-suggest/VxAutoSuggest.vue';\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport draggable from 'vuedraggable'\n\nexport default {\n    name: \"the-navbar\",\n    props: {\n        navbarColor: {\n            type: String,\n            default: \"#fff\",\n        },\n    },\n    data() {\n        return {\n            navbarSearchAndPinList: this.$store.state.navbarSearchAndPinList,\n            searchQuery: '',\n            showFullSearch: false,\n            unreadNotifications: [\n                { index: 0, title: 'New Message', msg: 'Are your going to meet me tonight?', icon: 'MessageSquareIcon', time: this.randomDate({sec: 10}), category: 'primary' },\n                { index: 1, title: 'New Order Recieved', msg: 'You got new order of goods.', icon: 'PackageIcon', time: this.randomDate({sec: 40}), category: 'success' },\n                { index: 2, title: 'Server Limit Reached!', msg: 'Server have 99% CPU usage.', icon: 'AlertOctagonIcon', time: this.randomDate({min: 1}), category: 'danger' },\n                { index: 3, title: 'New Mail From Peter', msg: 'Cake sesame snaps cupcake', icon: 'MailIcon', time: this.randomDate({min: 6}), category: 'primary' },\n                { index: 4, title: 'Bruce\\'s Party', msg: 'Chocolate cake oat cake tiramisu', icon: 'CalendarIcon', time: this.randomDate({hr: 2}), category: 'warning' },\n            ],\n            settings: { // perfectscrollbar settings\n                maxScrollbarLength: 60,\n                wheelSpeed: .60,\n            },\n            autoFocusSearch: false,\n            showBookmarkPagesDropdown: false,\n        }\n    },\n    watch: {\n        '$route'() {\n            if (this.showBookmarkPagesDropdown) this.showBookmarkPagesDropdown = false\n        }\n    },\n    computed: {\n        navbarColorLocal() {\n          return this.$store.state.theme === \"dark\" ? \"#10163a\" : this.navbarColor\n        },\n        // HELPER\n        verticalNavMenuWidth() {\n            return this.$store.state.verticalNavMenuWidth\n        },\n        windowWidth() {\n            return this.$store.state.windowWidth\n        },\n\n        // NAVBAR STYLE\n        classObj() {\n            if (this.verticalNavMenuWidth == \"default\") return \"navbar-default\"\n            else if (this.verticalNavMenuWidth == \"reduced\") return \"navbar-reduced\"\n            else if (this.verticalNavMenuWidth) return \"navbar-full\"\n        },\n\n        // BOOKMARK & SEARCH\n        data() {\n            return this.$store.state.navbarSearchAndPinList;\n        },\n        starredPages() {\n            return this.$store.state.starredPages;\n        },\n        starredPagesLimited: {\n            get() {\n                return this.starredPages.slice(0, 10);\n            },\n            set(list) {\n                this.$store.dispatch('arrangeStarredPagesLimited', list);\n            }\n        },\n        starredPagesMore: {\n            get() {\n                return this.starredPages.slice(10);\n            },\n            set(list) {\n                this.$store.dispatch('arrangeStarredPagesMore', list);\n            }\n        },\n\n        // PROFILE\n        activeUserInfo() {\n          return this.$store.state.AppActiveUser\n        },\n        user_displayName() {\n            return this.activeUserInfo.displayName\n        },\n        activeUserImg() {\n            return this.$store.state.AppActiveUser.photoURL;\n        }\n    },\n    methods: {\n        showSidebar() {\n            this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true);\n        },\n        selected(item) {\n            this.$router.push(item.url).catch(() => {})\n            this.showFullSearch = false;\n        },\n        actionClicked(item) {\n            // e.stopPropogation();\n            this.$store.dispatch('updateStarredPage', { index: item.index, val: !item.highlightAction });\n        },\n        showNavbarSearch() {\n            this.showFullSearch = true;\n        },\n        showSearchbar() {\n            this.showFullSearch = true;\n        },\n        elapsedTime(startTime) {\n            let x = new Date(startTime);\n            let now = new Date();\n            var timeDiff = now - x;\n            timeDiff /= 1000;\n\n            var seconds = Math.round(timeDiff);\n            timeDiff = Math.floor(timeDiff / 60);\n\n            var minutes = Math.round(timeDiff % 60);\n            timeDiff = Math.floor(timeDiff / 60);\n\n            var hours = Math.round(timeDiff % 24);\n            timeDiff = Math.floor(timeDiff / 24);\n\n            var days = Math.round(timeDiff % 365);\n            timeDiff = Math.floor(timeDiff / 365);\n\n            var years = timeDiff;\n\n            if (years > 0) {\n                return years + (years > 1 ? ' Years ' : ' Year ') + 'ago';\n            } else if (days > 0) {\n                return days + (days > 1 ? ' Days ' : ' Day ') + 'ago';\n            } else if (hours > 0) {\n                return hours + (hours > 1 ? ' Hrs ' : ' Hour ') + 'ago';\n            } else if (minutes > 0) {\n                return minutes + (minutes > 1 ? ' Mins ' : ' Min ') + 'ago';\n            } else if (seconds > 0) {\n                return seconds + (seconds > 1 ? ' sec ago' : 'just now');\n            }\n\n            return 'Just Now'\n        },\n        logout() {\n            // This is just for demo Purpose. If user clicks on logout -> redirect\n            this.$router.push('/pages/login').catch(() => {})\n        },\n        outside: function() {\n            this.showBookmarkPagesDropdown = false\n        },\n\n        // Method for creating dummy notification time\n        randomDate({hr, min, sec}) {\n          let date = new Date()\n\n          if(hr) date.setHours(date.getHours() - hr)\n          if(min) date.setMinutes(date.getMinutes() - min)\n          if(sec) date.setSeconds(date.getSeconds() - sec)\n\n          return date\n        }\n    },\n    directives: {\n        'click-outside': {\n            bind: function(el, binding) {\n                const bubble = binding.modifiers.bubble\n                const handler = (e) => {\n                    if (bubble || (!el.contains(e.target) && el !== e.target)) {\n                        binding.value(e)\n                    }\n                }\n                el.__vueClickOutside__ = handler\n                document.addEventListener('click', handler)\n            },\n\n            unbind: function(el) {\n                document.removeEventListener('click', el.__vueClickOutside__)\n                el.__vueClickOutside__ = null\n\n            }\n        }\n    },\n    components: {\n        VxAutoSuggest,\n        VuePerfectScrollbar,\n        draggable\n    },\n}\n</script>\n"]}]}