{"remainingRequest":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Belajar\\VueJS\\starter-kit\\node_modules\\babel-loader\\lib\\index.js!D:\\Belajar\\VueJS\\starter-kit\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Belajar\\VueJS\\starter-kit\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Belajar\\VueJS\\starter-kit\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Belajar\\VueJS\\starter-kit\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenu.vue","mtime":1570088654000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Belajar\\VueJS\\starter-kit\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _slicedToArray from \"D:\\\\Belajar\\\\VueJS\\\\starter-kit\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport VNavMenuGroup from \"./VerticalNavMenuGroup.vue\";\nimport VNavMenuItem from \"./VerticalNavMenuItem.vue\";\nexport default {\n  name: 'v-nav-menu',\n  components: {\n    VNavMenuGroup: VNavMenuGroup,\n    VNavMenuItem: VNavMenuItem,\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  props: {\n    logo: {\n      type: String\n    },\n    openGroupHover: {\n      type: Boolean,\n      default: false\n    },\n    parent: {\n      type: String\n    },\n    reduceNotRebound: {\n      type: Boolean,\n      default: true\n    },\n    navMenuItems: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      clickNotClose: false,\n      // disable close navMenu on outside click\n      isMouseEnter: false,\n      reduce: false,\n      // determines if navMenu is reduce - component property\n      showCloseButton: false,\n      // show close button in smaller devices\n      settings: {\n        // perfectScrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true\n      },\n      showShadowBottom: false\n    };\n  },\n  computed: {\n    isGroupActive: function isGroupActive() {\n      var _this = this;\n\n      return function (item) {\n        var path = _this.$route.fullPath;\n        var routeParent = _this.$route.meta ? _this.$route.meta.parent : undefined;\n        var open = false;\n\n        var func = function func(item) {\n          if (item.submenu) {\n            item.submenu.forEach(function (item) {\n              if (item.url && (path === item.url || routeParent === item.slug)) {\n                open = true;\n              } else if (item.submenu) {\n                func(item);\n              }\n            });\n          }\n        };\n\n        func(item);\n        return open;\n      };\n    },\n    menuItemsUpdated: function menuItemsUpdated() {\n      var clone = this.navMenuItems.slice();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var _step$value = _slicedToArray(_step.value, 2),\n              index = _step$value[0],\n              item = _step$value[1];\n\n          if (item.header && item.items.length && (index || 1)) {\n            var i = clone.findIndex(function (ix) {\n              return ix.header === item.header;\n            });\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = item.items.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var _step2$value = _slicedToArray(_step2.value, 2),\n                    subIndex = _step2$value[0],\n                    subItem = _step2$value[1];\n\n                clone.splice(i + 1 + subIndex, 0, subItem);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n        };\n\n        for (var _iterator = this.navMenuItems.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return clone;\n    },\n    isVerticalNavMenuActive: {\n      get: function get() {\n        return this.$store.state.isVerticalNavMenuActive;\n      },\n      set: function set(val) {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', val);\n      }\n    },\n    layoutType: function layoutType() {\n      return this.$store.state.mainLayoutType;\n    },\n    reduceButton: {\n      get: function get() {\n        return this.$store.state.reduceButton;\n      },\n      set: function set(val) {\n        this.$store.commit('TOGGLE_REDUCE_BUTTON', val);\n      }\n    },\n    isVerticalNavMenuReduced: function isVerticalNavMenuReduced() {\n      return Boolean(this.reduce && this.reduceButton);\n    },\n    verticalNavMenuItemsMin: function verticalNavMenuItemsMin() {\n      return this.$store.state.verticalNavMenuItemsMin;\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  watch: {\n    '$route': function $route() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false);\n    },\n    reduce: function reduce(val) {\n      var verticalNavMenuWidth = val ? \"reduced\" : \"default\";\n      this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth);\n      setTimeout(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 100);\n    },\n    layoutType: function layoutType() {\n      this.setVerticalNavMenuWidth();\n    },\n    reduceButton: function reduceButton() {\n      this.setVerticalNavMenuWidth();\n    },\n    windowWidth: function windowWidth() {\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  methods: {\n    // handleWindowResize(event) {\n    //   this.windowWidth = event.currentTarget.innerWidth;\n    //   this.setVerticalNavMenuWidth()\n    // },\n    onSwipeLeft: function onSwipeLeft() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false;\n    },\n    onSwipeAreaSwipeRight: function onSwipeAreaSwipeRight() {\n      if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true;\n    },\n    psSectionScroll: function psSectionScroll() {\n      this.showShadowBottom = this.$refs.verticalNavMenuPs.$el.scrollTop > 0 ? true : false;\n    },\n    mouseEnter: function mouseEnter() {\n      if (this.reduce) this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false);\n      this.isMouseEnter = true;\n    },\n    mouseLeave: function mouseLeave() {\n      if (this.reduce) this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', true);\n      this.isMouseEnter = false;\n    },\n    setVerticalNavMenuWidth: function setVerticalNavMenuWidth() {\n      if (this.windowWidth > 1200) {\n        if (this.layoutType === 'vertical') {\n          // Set reduce\n          this.reduce = this.reduceButton ? true : false; // Open NavMenu\n\n          this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true); // Set Menu Items Only Icon Mode\n\n          var verticalNavMenuItemsMin = this.reduceButton && !this.isMouseEnter ? true : false;\n          this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin); // Menu Action buttons\n\n          this.clickNotClose = true;\n          this.showCloseButton = false;\n          var verticalNavMenuWidth = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\";\n          this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth);\n          return;\n        }\n      } // Close NavMenu\n\n\n      this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false); // Reduce button\n\n      if (this.reduceButton) this.reduce = false; // Menu Action buttons\n\n      this.showCloseButton = true;\n      this.clickNotClose = false; // Update NavMenu Width\n\n      this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu'); // Remove Only Icon in Menu\n\n      this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false); // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\n      // if (this.windowWidth < 1200) {\n      //   // Close NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n      //   // Reduce button\n      //   if (this.reduceButton) this.reduce = false\n      //   // Menu Action buttons\n      //   this.showCloseButton = true\n      //   this.clickNotClose   = false\n      //   // Update NavMenu Width\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n      //   // Remove Only Icon in Menu\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n      // } else {\n      //   // Set reduce\n      //   this.reduce = this.reduceButton ? true : false\n      //   // Open NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n      //   // Set Menu Items Only Icon Mode\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\n      //   // Menu Action buttons\n      //   this.clickNotClose   = true\n      //   this.showCloseButton = false\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n      // }\n    },\n    toggleReduce: function toggleReduce(val) {\n      this.reduceButton = val;\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  mounted: function mounted() {\n    this.setVerticalNavMenuWidth();\n  }\n};",{"version":3,"sources":["VerticalNavMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA,OAAA,mBAAA,MAAA,uBAAA;AACA,OAAA,aAAA;AACA,OAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,mBAAA,EAAA;AAHA,GAFA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KADA;AAEA,IAAA,cAAA,EAAA;AAAA,MAAA,IAAA,EAAA,OAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAFA;AAGA,IAAA,MAAA,EAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KAHA;AAIA,IAAA,gBAAA,EAAA;AAAA,MAAA,IAAA,EAAA,OAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAJA;AAKA,IAAA,YAAA,EAAA;AAAA,MAAA,IAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KALA;AAMA,IAAA,KAAA,EAAA;AAAA,MAAA,IAAA,EAAA;AAAA;AANA,GAPA;AAeA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,aAAA,EAAA,KADA;AACA;AACA,MAAA,YAAA,EAAA,KAFA;AAGA,MAAA,MAAA,EAAA,KAHA;AAGA;AACA,MAAA,eAAA,EAAA,KAJA;AAIA;AACA,MAAA,QAAA,EAAA;AAAA;AACA,QAAA,kBAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA,CAFA;AAGA,QAAA,WAAA,EAAA;AAHA,OALA;AAUA,MAAA,gBAAA,EAAA;AAVA,KAAA;AAAA,GAfA;AA2BA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,aAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,QAAA;AACA,YAAA,WAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,SAAA;AACA,YAAA,IAAA,GAAA,KAAA;;AAEA,YAAA,IAAA,GAAA,SAAA,IAAA,CAAA,IAAA,EAAA;AACA,cAAA,IAAA,CAAA,OAAA,EAAA;AACA,YAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,kBAAA,IAAA,CAAA,GAAA,KAAA,IAAA,KAAA,IAAA,CAAA,GAAA,IAAA,WAAA,KAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AAAA,gBAAA,IAAA,GAAA,IAAA;AAAA,eAAA,MACA,IAAA,IAAA,CAAA,OAAA,EAAA;AAAA,gBAAA,IAAA,CAAA,IAAA,CAAA;AAAA;AACA,aAHA;AAIA;AACA,SAPA;;AAQA,QAAA,IAAA,CAAA,IAAA,CAAA;AACA,eAAA,IAAA;AACA,OAfA;AAgBA,KAlBA;AAmBA,IAAA,gBAnBA,8BAmBA;AACA,UAAA,KAAA,GAAA,KAAA,YAAA,CAAA,KAAA,EAAA;AADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,cAGA,KAHA;AAAA,cAGA,IAHA;;AAIA,cAAA,IAAA,CAAA,MAAA,IAAA,IAAA,CAAA,KAAA,CAAA,MAAA,KAAA,KAAA,IAAA,CAAA,CAAA,EAAA;AACA,gBAAA,CAAA,GAAA,KAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,qBAAA,EAAA,CAAA,MAAA,KAAA,IAAA,CAAA,MAAA;AAAA,aAAA,CAAA;AADA;AAAA;AAAA;;AAAA;AAEA,oCAAA,IAAA,CAAA,KAAA,CAAA,OAAA,EAAA,mIAAA;AAAA;AAAA,oBAAA,QAAA;AAAA,oBAAA,OAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA,GAAA,QAAA,EAAA,CAAA,EAAA,OAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AATA;;AAGA,6BAAA,KAAA,YAAA,CAAA,OAAA,EAAA,8HAAA;AAAA;AAOA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,aAAA,KAAA;AACA,KAhCA;AAiCA,IAAA,uBAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,uBAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,GAFA,EAEA;AAAA,aAAA,MAAA,CAAA,MAAA,CAAA,oCAAA,EAAA,GAAA;AAAA;AAFA,KAjCA;AAqCA,IAAA,UArCA,wBAqCA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,cAAA;AAAA,KArCA;AAsCA,IAAA,YAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,GAFA,EAEA;AAAA,aAAA,MAAA,CAAA,MAAA,CAAA,sBAAA,EAAA,GAAA;AAAA;AAFA,KAtCA;AA0CA,IAAA,wBA1CA,sCA0CA;AAAA,aAAA,OAAA,CAAA,KAAA,MAAA,IAAA,KAAA,YAAA,CAAA;AAAA,KA1CA;AA2CA,IAAA,uBA3CA,qCA2CA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,uBAAA;AAAA,KA3CA;AA4CA,IAAA,WA5CA,yBA4CA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA;AAAA;AA5CA,GA3BA;AAyEA,EAAA,KAAA,EAAA;AACA,YADA,oBACA;AACA,UAAA,KAAA,uBAAA,IAAA,KAAA,eAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,oCAAA,EAAA,KAAA;AACA,KAHA;AAIA,IAAA,MAJA,kBAIA,GAJA,EAIA;AACA,UAAA,oBAAA,GAAA,GAAA,GAAA,SAAA,GAAA,SAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,4BAAA,EAAA,oBAAA;AAEA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,aAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA;AACA,OAFA,EAEA,GAFA,CAAA;AAGA,KAXA;AAYA,IAAA,UAZA,wBAYA;AAAA,WAAA,uBAAA;AAAA,KAZA;AAaA,IAAA,YAbA,0BAaA;AAAA,WAAA,uBAAA;AAAA,KAbA;AAcA,IAAA,WAdA,yBAcA;AAAA,WAAA,uBAAA;AAAA;AAdA,GAzEA;AAyFA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA,IAAA,WALA,yBAKA;AACA,UAAA,KAAA,uBAAA,IAAA,KAAA,eAAA,EAAA,KAAA,uBAAA,GAAA,KAAA;AACA,KAPA;AAQA,IAAA,qBARA,mCAQA;AACA,UAAA,CAAA,KAAA,uBAAA,IAAA,KAAA,eAAA,EAAA,KAAA,uBAAA,GAAA,IAAA;AACA,KAVA;AAWA,IAAA,eAXA,6BAWA;AACA,WAAA,gBAAA,GAAA,KAAA,KAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,SAAA,GAAA,CAAA,GAAA,IAAA,GAAA,KAAA;AACA,KAbA;AAcA,IAAA,UAdA,wBAcA;AACA,UAAA,KAAA,MAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,oCAAA,EAAA,KAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KAjBA;AAkBA,IAAA,UAlBA,wBAkBA;AACA,UAAA,KAAA,MAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,oCAAA,EAAA,IAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,KArBA;AAsBA,IAAA,uBAtBA,qCAsBA;AAEA,UAAA,KAAA,WAAA,GAAA,IAAA,EAAA;AACA,YAAA,KAAA,UAAA,KAAA,UAAA,EAAA;AAEA;AACA,eAAA,MAAA,GAAA,KAAA,YAAA,GAAA,IAAA,GAAA,KAAA,CAHA,CAKA;;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,oCAAA,EAAA,IAAA,EANA,CAQA;;AACA,cAAA,uBAAA,GAAA,KAAA,YAAA,IAAA,CAAA,KAAA,YAAA,GAAA,IAAA,GAAA,KAAA;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,oCAAA,EAAA,uBAAA,EAVA,CAYA;;AACA,eAAA,aAAA,GAAA,IAAA;AACA,eAAA,eAAA,GAAA,KAAA;AAEA,cAAA,oBAAA,GAAA,KAAA,wBAAA,GAAA,SAAA,GAAA,SAAA;AACA,eAAA,MAAA,CAAA,QAAA,CAAA,4BAAA,EAAA,oBAAA;AAEA;AACA;AACA,OAxBA,CA0BA;;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,oCAAA,EAAA,KAAA,EA3BA,CA6BA;;AACA,UAAA,KAAA,YAAA,EAAA,KAAA,MAAA,GAAA,KAAA,CA9BA,CAgCA;;AACA,WAAA,eAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,KAAA,CAlCA,CAoCA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,4BAAA,EAAA,aAAA,EArCA,CAuCA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,oCAAA,EAAA,KAAA,EAxCA,CA4CA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA,KAxGA;AAyGA,IAAA,YAzGA,wBAyGA,GAzGA,EAyGA;AACA,WAAA,YAAA,GAAA,GAAA;AACA,WAAA,uBAAA;AACA;AA5GA,GAzFA;AAuMA,EAAA,OAvMA,qBAuMA;AACA,SAAA,uBAAA;AACA;AAzMA,CAAA","sourcesContent":["<!-- =========================================================================================\n  File Name: VerticalNavMenu.vue\n  Description: Vertical NavMenu Component\n  Component Name: VerticalNavMenu\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n    Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <div class=\"parentx\">\n\n    <vs-sidebar\n      class=\"v-nav-menu items-no-padding\"\n      v-model=\"isVerticalNavMenuActive\"\n      ref=\"verticalNavMenu\"\n      default-index=\"-1\"\n      :click-not-close=\"clickNotClose\"\n      :reduce-not-rebound=\"reduceNotRebound\"\n      :parent=\"parent\"\n      :hiddenBackground=\"clickNotClose\"\n      :reduce=\"reduce\"\n      v-hammer:swipe.left=\"onSwipeLeft\">\n\n      <div @mouseenter=\"mouseEnter\" @mouseleave=\"mouseLeave\">\n\n        <!-- Header -->\n        <div class=\"header-sidebar flex items-end justify-between\" slot=\"header\">\n\n          <!-- Logo -->\n          <router-link tag=\"div\" class=\"vx-logo cursor-pointer flex items-center\" to=\"/\">\n            <img :src=\"logo\" alt=\"logo\" class=\"w-10 mr-4\" v-if=\"logo\">\n            <span class=\"vx-logo-text\" v-show=\"isMouseEnter || !reduce\" v-if=\"title\">{{ title }}</span>\n          </router-link>\n          <!-- /Logo -->\n\n          <!-- Menu Buttons -->\n          <div>\n            <!-- Close Button -->\n            <template v-if=\"showCloseButton\">\n              <feather-icon icon=\"XIcon\" class=\"m-0 cursor-pointer\" @click=\"$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\" />\n            </template>\n\n            <!-- Toggle Buttons -->\n            <template v-else-if=\"!showCloseButton && !verticalNavMenuItemsMin\">\n              <feather-icon\n                id=\"btnVNavMenuMinToggler\"\n                class=\"mr-0 cursor-pointer\"\n                :icon=\"reduce ? 'CircleIcon' : 'DiscIcon'\"\n                svg-classes=\"stroke-current\"\n                @click=\"toggleReduce(!reduce)\" />\n            </template>\n          </div>\n          <!-- /Menu Toggle Buttons -->\n        </div>\n        <!-- /Header -->\n\n        <!-- Header Shadow -->\n        <div class=\"shadow-bottom\" v-show=\"showShadowBottom\" />\n\n        <!-- Menu Items -->\n        <VuePerfectScrollbar ref=\"verticalNavMenuPs\" class=\"scroll-area-v-nav-menu pt-2\" :settings=\"settings\" @ps-scroll-y=\"psSectionScroll\">\n          <template v-for=\"(item, index) in menuItemsUpdated\">\n\n            <!-- Group Header -->\n            <span v-if=\"item.header && !verticalNavMenuItemsMin\" class=\"navigation-header truncate\" :key=\"`header-${index}`\">\n              {{ item.header }}\n            </span>\n            <!-- /Group Header -->\n\n            <template v-else-if=\"!item.header\">\n\n              <!-- Nav-Item -->\n              <v-nav-menu-item\n                v-if=\"!item.submenu\"\n                :key=\"`item-${index}`\"\n                :index=\"index\"\n                :to=\"item.slug !== 'external' ? item.url : null\"\n                :href=\"item.slug === 'external' ? item.url : null\"\n                :icon=\"item.icon\" :target=\"item.target\"\n                :isDisabled=\"item.isDisabled\"\n                :slug=\"item.slug\">\n                  <span v-show=\"!verticalNavMenuItemsMin\" class=\"truncate\">{{ item.name }}</span>\n                  <vs-chip class=\"ml-auto\" :color=\"item.tagColor\" v-if=\"item.tag && (isMouseEnter || !reduce)\">{{ item.tag }}</vs-chip>\n              </v-nav-menu-item>\n\n              <!-- Nav-Group -->\n              <template v-else>\n                <v-nav-menu-group\n                  :key=\"`group-${index}`\"\n                  :openHover=\"openGroupHover\"\n                  :group=\"item\"\n                  :groupIndex=\"index\"\n                  :open=\"isGroupActive(item)\" />\n              </template>\n              <!-- /Nav-Group -->\n            </template>\n          </template>\n        </VuePerfectScrollbar>\n        <!-- /Menu Items -->\n      </div>\n    </vs-sidebar>\n\n    <!-- Swipe Gesture -->\n    <div\n      v-if=\"!isVerticalNavMenuActive\"\n      class=\"v-nav-menu-swipe-area\"\n      v-hammer:swipe.right=\"onSwipeAreaSwipeRight\" />\n    <!-- /Swipe Gesture -->\n  </div>\n</template>\n\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport VNavMenuGroup from './VerticalNavMenuGroup.vue'\nimport VNavMenuItem from './VerticalNavMenuItem.vue'\n\nexport default {\n  name: 'v-nav-menu',\n  components: {\n    VNavMenuGroup,\n    VNavMenuItem,\n    VuePerfectScrollbar,\n  },\n  props: {\n    logo:             { type: String },\n    openGroupHover:   { type: Boolean, default: false },\n    parent:           { type: String },\n    reduceNotRebound: { type: Boolean, default: true },\n    navMenuItems:     { type: Array,   required: true },\n    title:            { type: String },\n  },\n  data: () => ({\n    clickNotClose       : false, // disable close navMenu on outside click\n    isMouseEnter        : false,\n    reduce              : false, // determines if navMenu is reduce - component property\n    showCloseButton     : false, // show close button in smaller devices\n    settings            : {      // perfectScrollbar settings\n      maxScrollbarLength: 60,\n      wheelSpeed        : 1,\n      swipeEasing       : true\n    },\n    showShadowBottom    : false,\n  }),\n  computed: {\n    isGroupActive() {\n      return (item) => {\n        const path        = this.$route.fullPath\n        const routeParent = this.$route.meta ? this.$route.meta.parent : undefined\n        let open          = false\n\n        let func = (item) => {\n          if (item.submenu) {\n            item.submenu.forEach((item) => {\n              if (item.url && (path === item.url || routeParent === item.slug)) { open = true }\n              else if (item.submenu) { func(item) }\n            })\n          }\n        }\n        func(item)\n        return open\n      }\n    },\n    menuItemsUpdated() {\n      let clone = this.navMenuItems.slice()\n\n      for(let [index, item] of this.navMenuItems.entries()) {\n        if (item.header && item.items.length && (index || 1)) {\n          let i = clone.findIndex(ix => ix.header === item.header)\n          for(let [subIndex, subItem] of item.items.entries()) {\n            clone.splice(i + 1 + subIndex, 0, subItem)\n          }\n        }\n      }\n\n      return clone\n    },\n    isVerticalNavMenuActive: {\n      get()    { return this.$store.state.isVerticalNavMenuActive },\n      set(val) { this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', val) }\n    },\n    layoutType() { return this.$store.state.mainLayoutType },\n    reduceButton: {\n      get()    { return this.$store.state.reduceButton },\n      set(val) { this.$store.commit('TOGGLE_REDUCE_BUTTON', val) }\n    },\n    isVerticalNavMenuReduced()   { return Boolean(this.reduce && this.reduceButton) },\n    verticalNavMenuItemsMin() { return this.$store.state.verticalNavMenuItemsMin },\n    windowWidth()     { return this.$store.state.windowWidth }\n  },\n  watch: {\n    '$route'() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n    },\n    reduce(val) {\n      const verticalNavMenuWidth = val ? \"reduced\" : \"default\"\n      this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n\n      setTimeout(function() {\n        window.dispatchEvent(new Event('resize'))\n      }, 100)\n    },\n    layoutType()   { this.setVerticalNavMenuWidth() },\n    reduceButton() { this.setVerticalNavMenuWidth() },\n    windowWidth()  { this.setVerticalNavMenuWidth() }\n  },\n  methods: {\n    // handleWindowResize(event) {\n    //   this.windowWidth = event.currentTarget.innerWidth;\n    //   this.setVerticalNavMenuWidth()\n    // },\n    onSwipeLeft() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false\n    },\n    onSwipeAreaSwipeRight() {\n      if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true\n    },\n    psSectionScroll() {\n      this.showShadowBottom = this.$refs.verticalNavMenuPs.$el.scrollTop > 0 ? true : false\n    },\n    mouseEnter() {\n      if (this.reduce) this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n      this.isMouseEnter = true\n    },\n    mouseLeave() {\n      if (this.reduce) this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', true)\n      this.isMouseEnter = false;\n    },\n    setVerticalNavMenuWidth() {\n\n      if(this.windowWidth > 1200) {\n        if(this.layoutType === 'vertical') {\n\n          // Set reduce\n          this.reduce = this.reduceButton ? true : false\n\n          // Open NavMenu\n          this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n\n          // Set Menu Items Only Icon Mode\n          const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\n          this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\n\n          // Menu Action buttons\n          this.clickNotClose   = true\n          this.showCloseButton = false\n\n          const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\n          this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n\n          return\n        }\n      }\n\n      // Close NavMenu\n      this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n\n      // Reduce button\n      if (this.reduceButton) this.reduce = false\n\n      // Menu Action buttons\n      this.showCloseButton = true\n      this.clickNotClose   = false\n\n      // Update NavMenu Width\n      this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n\n      // Remove Only Icon in Menu\n      this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n\n\n\n      // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\n      // if (this.windowWidth < 1200) {\n\n      //   // Close NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n\n      //   // Reduce button\n      //   if (this.reduceButton) this.reduce = false\n\n      //   // Menu Action buttons\n      //   this.showCloseButton = true\n      //   this.clickNotClose   = false\n\n      //   // Update NavMenu Width\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n\n      //   // Remove Only Icon in Menu\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n\n      // } else {\n\n      //   // Set reduce\n      //   this.reduce = this.reduceButton ? true : false\n\n      //   // Open NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n\n      //   // Set Menu Items Only Icon Mode\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\n\n      //   // Menu Action buttons\n      //   this.clickNotClose   = true\n      //   this.showCloseButton = false\n\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n      // }\n    },\n    toggleReduce(val) {\n      this.reduceButton = val\n      this.setVerticalNavMenuWidth()\n    },\n  },\n  mounted() {\n    this.setVerticalNavMenuWidth()\n  },\n}\n\n</script>\n\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/components/verticalNavMenu.scss\"\n</style>\n"],"sourceRoot":"src/layouts/components/vertical-nav-menu"}]}